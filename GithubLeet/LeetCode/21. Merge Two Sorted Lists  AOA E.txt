Merge two sorted linked lists and return it as a new list. 
The new list should be made by splicing together the nodes of the first two lists.
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) 
    {
        //build the list on this
         ListNode result = new ListNode(-1);
         //use -1 as a list can never been -1 index
        //head will be used to return the beginning of the result lsit
         ListNode head = result;
        //while they both arent null u compare
        
        while(l1 != null && l2 != null)
        {
            if(l1.val < l2.val)
            {
                //if l1 is less than l2, put l1 as the next node
                result.next = l1;
                l1 = l1.next; //move l1 to the next node
            }
            else
            {   //where l2 is less than l1, add it to the list and move to                        next node
                result.next = l2;
                l2 = l2.next;  
            }
            result = result.next; //move to the next result loop
        }
        //now gotta check to see if list1 or list 2 has any values left
        
        if(l1 != null)
        {     
            result.next = l1; //all the values left in l1 are greater than l2
        }
        else if(l2!=null)
        {
            result.next= l2;
        }
        return head.next;

    }
}